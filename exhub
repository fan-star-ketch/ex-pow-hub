--[[

SX Cyberpunk Admin Hub — Single LocalScript
Put this file as a LocalScript in StarterGui.
Client-side, for your own place/testing.

Design goals:
- Sidebar hub like your screenshots (tabs + collapsible sections)
- Hoverable neon look (Cyberpunk 2077 vibe)
- Mobile friendly (big touch targets, scroll, draggable)
- Many admin-style commands (self + target tools)
- Load/Unload button, robust, no deprecated behaviors causing crashes

]]--

--// SERVICES
local Players            = game:GetService("Players")
local UIS                = game:GetService("UserInputService")
local RS                 = game:GetService("RunService")
local TweenService       = game:GetService("TweenService")
local Lighting           = game:GetService("Lighting")
local TeleportService    = game:GetService("TeleportService")
local StarterGui         = game:GetService("StarterGui")

--// PLAYER
local LocalPlayer        = Players.LocalPlayer
local PlayerGui          = LocalPlayer:WaitForChild("PlayerGui")

local function getCharacter()
	local c = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local h = c:FindFirstChildOfClass("Humanoid") or c:WaitForChild("Humanoid")
	return c, h
end

local Character, Humanoid = getCharacter()
LocalPlayer.CharacterAdded:Connect(function(c)
	Character = c
	Humanoid = c:WaitForChild("Humanoid")
end)

--// THEME
local COLOR_BG           = Color3.fromRGB(17, 17, 22)
local COLOR_BG_SOFT      = Color3.fromRGB(12, 12, 16)
local COLOR_NEON_PINK    = Color3.fromRGB(255, 0, 128)
local COLOR_NEON_BLUE    = Color3.fromRGB(0, 255, 255)
local COLOR_NEON_YELLOW  = Color3.fromRGB(255, 255, 0)
local COLOR_TEXT         = Color3.fromRGB(220, 230, 240)

--// STATE
local HubGui             = nil
local Tabs               = {}
local ActiveTab          = nil
local Connections        = {}
local Toggles            = {}
local FlyConn            = nil
local NoclipConn         = nil
local InfJumpConn        = nil
local ESPFolder          = nil
local CurrentTarget      = nil
local Dragging           = false

--// UTIL
local function tween(i, t, props)
	return TweenService:Create(i, TweenInfo.new(t, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), props)
end

local function clearConnections(list)
	for k,conn in pairs(list) do
		if typeof(conn) == "RBXScriptConnection" then
			conn:Disconnect()
		end
		list[k] = nil
	end
end

local function safeHumanoid()
	if not Humanoid or not Humanoid.Parent then
		Character, Humanoid = getCharacter()
	end
	return Humanoid
end

local function rootPart()
	if Character then
		return Character:FindFirstChild("HumanoidRootPart")
	end
end

local function announce(text)
	pcall(function()
		StarterGui:SetCore("SendNotification", {
			Title = "SX Admin Hub";
			Text  = text;
			Duration = 3;
		})
	end)
end

--// UI BUILDERS
local function makeStroke(parent, color, thickness)
	local s = Instance.new("UIStroke")
	s.Color = color
	s.Thickness = thickness or 1
	s.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	s.Parent = parent
	return s
end

local function makeCorner(parent, r)
	local c = Instance.new("UICorner")
	c.CornerRadius = UDim.new(0, r or 10)
	c.Parent = parent
	return c
end

local function hoverable(button, bgDefault, bgHover, textDefault, textHover)
	button.MouseEnter:Connect(function()
		tween(button, 0.15, {BackgroundColor3 = bgHover, TextColor3 = textHover}):Play()
	end)
	button.MouseLeave:Connect(function()
		tween(button, 0.15, {BackgroundColor3 = bgDefault, TextColor3 = textDefault}):Play()
	end)
end

local function makeButton(parent, text, height)
	local b = Instance.new("TextButton")
	b.Size = UDim2.new(1, -20, 0, height or 44)
	b.BackgroundColor3 = COLOR_BG_SOFT
	b.BorderSizePixel = 0
	b.AutoButtonColor = false
	b.Font = Enum.Font.GothamBold
	b.TextColor3 = COLOR_NEON_BLUE
	b.TextSize = 14
	b.Text = text or "Action"
	b.Parent = parent
	makeCorner(b, 8)
	makeStroke(b, COLOR_NEON_PINK, 1)
	hoverable(b, COLOR_BG_SOFT, COLOR_NEON_PINK, COLOR_NEON_BLUE, COLOR_NEON_YELLOW)
	return b
end

local function makeToggle(parent, labelText, default)
	local holder = Instance.new("Frame")
	holder.Size = UDim2.new(1, -20, 0, 44)
	holder.BackgroundColor3 = COLOR_BG_SOFT
	holder.BorderSizePixel = 0
	holder.Parent = parent
	makeCorner(holder, 8)
	makeStroke(holder, COLOR_NEON_PINK, 1)

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, -100, 1, 0)
	label.Position = UDim2.new(0, 12, 0, 0)
	label.BackgroundTransparency = 1
	label.Font = Enum.Font.GothamSemibold
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Text = labelText or "Toggle"
	label.TextColor3 = COLOR_TEXT
	label.Parent = holder

	local t = Instance.new("TextButton")
	t.Size = UDim2.new(0, 80, 0, 30)
	t.Position = UDim2.new(1, -92, 0.5, -15)
	t.BackgroundColor3 = default and Color3.fromRGB(0, 170, 90) or Color3.fromRGB(60, 60, 68)
	t.AutoButtonColor = false
	t.Text = default and "ON" or "OFF"
	t.Font = Enum.Font.GothamBold
	t.TextSize = 14
	t.TextColor3 = Color3.fromRGB(245,245,245)
	t.Parent = holder
	makeCorner(t, 6)

	hoverable(t, t.BackgroundColor3, COLOR_NEON_PINK, t.TextColor3, COLOR_NEON_YELLOW)

	local state = default or false

	t.MouseButton1Click:Connect(function()
		state = not state
		t.Text = state and "ON" or "OFF"
		tween(t, 0.15, {BackgroundColor3 = state and Color3.fromRGB(0,170,90) or Color3.fromRGB(60,60,68)}):Play()
	end)

	return {
		Frame = holder,
		Button = t,
		Label = label,
		Get = function() return state end,
		Set = function(v)
			state = not not v
			t.Text = state and "ON" or "OFF"
			t.BackgroundColor3 = state and Color3.fromRGB(0,170,90) or Color3.fromRGB(60,60,68)
		end,
		Changed = t.MouseButton1Click
	}
end

local function makeTextBox(parent, labelText, placeholder)
	local holder = Instance.new("Frame")
	holder.Size = UDim2.new(1, -20, 0, 56)
	holder.BackgroundColor3 = COLOR_BG_SOFT
	holder.BorderSizePixel = 0
	holder.Parent = parent
	makeCorner(holder, 8)
	makeStroke(holder, COLOR_NEON_PINK, 1)

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, -20, 0, 20)
	label.Position = UDim2.new(0, 12, 0, 6)
	label.BackgroundTransparency = 1
	label.Font = Enum.Font.GothamSemibold
	label.TextSize = 13
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Text = labelText or "Input"
	label.TextColor3 = COLOR_TEXT
	label.Parent = holder

	local box = Instance.new("TextBox")
	box.Size = UDim2.new(1, -24, 0, 24)
	box.Position = UDim2.new(0, 12, 0, 28)
	box.BackgroundColor3 = COLOR_BG
	box.BorderSizePixel = 0
	box.ClearTextOnFocus = false
	box.PlaceholderText = placeholder or ""
	box.Text = ""
	box.TextColor3 = COLOR_NEON_BLUE
	box.Font = Enum.Font.Gotham
	box.TextSize = 14
	box.Parent = holder
	makeCorner(box, 6)
	makeStroke(box, COLOR_NEON_BLUE, 1)

	return box
end

local function makeDropdown(parent, labelText, getItemsFunc, onSelect)
	local holder = Instance.new("Frame")
	holder.Size = UDim2.new(1, -20, 0, 44)
	holder.BackgroundColor3 = COLOR_BG_SOFT
	holder.Parent = parent
	makeCorner(holder, 8)
	makeStroke(holder, COLOR_NEON_PINK, 1)

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, -40, 1, 0)
	label.Position = UDim2.new(0, 12, 0, 0)
	label.BackgroundTransparency = 1
	label.Font = Enum.Font.GothamSemibold
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Text = labelText or "Select"
	label.TextColor3 = COLOR_TEXT
	label.Parent = holder

	local arrow = Instance.new("TextButton")
	arrow.Size = UDim2.new(0, 32, 0, 32)
	arrow.Position = UDim2.new(1, -36, 0.5, -16)
	arrow.BackgroundTransparency = 1
	arrow.Text = "▼"
	arrow.TextColor3 = COLOR_NEON_BLUE
	arrow.Font = Enum.Font.GothamBold
	arrow.TextSize = 16
	arrow.Parent = holder

	local listFrame = Instance.new("Frame")
	listFrame.Visible = false
	listFrame.Size = UDim2.new(1, -20, 0, 160)
	listFrame.Position = UDim2.new(0, 10, 0, 50)
	listFrame.BackgroundColor3 = COLOR_BG_SOFT
	listFrame.Parent = parent
	makeCorner(listFrame, 8)
	makeStroke(listFrame, COLOR_NEON_PINK, 1)

	local scroll = Instance.new("ScrollingFrame", listFrame)
	scroll.Size = UDim2.new(1, 0, 1, 0)
	scroll.BackgroundTransparency = 1
	scroll.ScrollBarThickness = 6
	local layout = Instance.new("UIListLayout", scroll)
	layout.Padding = UDim.new(0,6)

	local function populate()
		scroll:ClearAllChildren()
		layout.Parent = scroll
		local items = {}
		local ok, res = pcall(getItemsFunc)
		if ok and type(res) == "table" then
			items = res
		end
		for _,item in ipairs(items) do
			local btn = Instance.new("TextButton")
			btn.Size = UDim2.new(1, -10, 0, 32)
			btn.BackgroundColor3 = COLOR_BG
			btn.BorderSizePixel = 0
			btn.AutoButtonColor = false
			btn.Font = Enum.Font.Gotham
			btn.TextColor3 = COLOR_NEON_BLUE
			btn.TextSize = 14
			btn.Text = tostring(item.text or item)
			btn.Parent = scroll
			makeCorner(btn, 6)
			makeStroke(btn, COLOR_NEON_BLUE, 1)
			hoverable(btn, COLOR_BG, COLOR_NEON_PINK, COLOR_NEON_BLUE, COLOR_NEON_YELLOW)
			btn.MouseButton1Click:Connect(function()
				label.Text = (labelText or "Select") .. " : " .. tostring(item.text or item)
				listFrame.Visible = false
				if onSelect then onSelect(item.value or item) end
			end)
		end
		scroll.CanvasSize = UDim2.new(0,0,0, layout.AbsoluteContentSize.Y + 10)
	end

	arrow.MouseButton1Click:Connect(function()
		if listFrame.Visible then
			listFrame.Visible = false
		else
			populate()
			listFrame.Visible = true
		end
	end)

	return {
		SetText = function(t) label.Text = t end,
		Close = function() listFrame.Visible = false end,
		Open = function() populate(); listFrame.Visible = true end
	}
end

local function makeSection(parent, titleText)
	local holder = Instance.new("Frame")
	holder.Size = UDim2.new(1, 0, 0, 46)
	holder.BackgroundColor3 = COLOR_BG
	holder.Parent = parent
	makeCorner(holder, 10)
	makeStroke(holder, COLOR_NEON_BLUE, 1)

	local header = Instance.new("TextButton")
	header.Size = UDim2.new(1, -12, 0, 42)
	header.Position = UDim2.new(0, 6, 0, 2)
	header.BackgroundColor3 = COLOR_BG_SOFT
	header.AutoButtonColor = false
	header.Font = Enum.Font.GothamBold
	header.TextSize = 14
	header.TextColor3 = COLOR_NEON_BLUE
	header.TextXAlignment = Enum.TextXAlignment.Left
	header.Text = "  " .. (titleText or "Section") .. "   ▲"
	header.Parent = holder
	makeCorner(header, 8)
	makeStroke(header, COLOR_NEON_PINK, 1)
	hoverable(header, COLOR_BG_SOFT, COLOR_NEON_PINK, COLOR_NEON_BLUE, COLOR_NEON_YELLOW)

	local body = Instance.new("Frame")
	body.Size = UDim2.new(1, -12, 0, 0)
	body.Position = UDim2.new(0, 6, 0, 46)
	body.BackgroundColor3 = COLOR_BG_SOFT
	body.Parent = holder
	makeCorner(body, 8)
	makeStroke(body, COLOR_NEON_PINK, 1)

	local list = Instance.new("UIListLayout", body)
	list.Padding = UDim.new(0, 8)

	local expanded = false
	local function setExpanded(v)
		expanded = v
		header.Text = "  " .. (titleText or "Section") .. (expanded and "   ▲" or "   ▼")
		local wanted = expanded and (list.AbsoluteContentSize.Y + 16) or 0
		tween(body, 0.2, {Size = UDim2.new(1, -12, 0, wanted)}):Play()
		tween(holder, 0.2, {Size = UDim2.new(1, 0, 0, 46 + wanted + 6)}):Play()
	end

	header.MouseButton1Click:Connect(function()
		setExpanded(not expanded)
	end)

	-- Expand by default
	task.defer(function()
		setExpanded(true)
	end)

	return {
		Container = body,
		UpdateHeight = function()
			local wanted = expanded and (list.AbsoluteContentSize.Y + 16) or 0
			body.Size = UDim2.new(1, -12, 0, wanted)
			holder.Size = UDim2.new(1, 0, 0, 46 + wanted + 6)
		end
	}
end

local function createTab(name, sideBar, contentHolder)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, -12, 0, 40)
	btn.Position = UDim2.new(0, 6, 0, 0)
	btn.BackgroundColor3 = COLOR_BG_SOFT
	btn.Text = "  " .. name
	btn.TextColor3 = COLOR_NEON_BLUE
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 14
	btn.AutoButtonColor = false
	btn.Parent = sideBar
	makeCorner(btn, 8)
	makeStroke(btn, COLOR_NEON_PINK, 1)
	hoverable(btn, COLOR_BG_SOFT, COLOR_NEON_PINK, COLOR_NEON_BLUE, COLOR_NEON_YELLOW)

	local page = Instance.new("ScrollingFrame")
	page.Size = UDim2.new(1, 0, 1, 0)
	page.BackgroundTransparency = 1
	page.ScrollBarThickness = 6
	page.Visible = false
	page.Parent = contentHolder

	local layout = Instance.new("UIListLayout", page)
	layout.Padding = UDim.new(0, 10)

	btn.MouseButton1Click:Connect(function()
		for tabName, data in pairs(Tabs) do
			data.Page.Visible = false
			tween(data.Button, 0.12, {BackgroundColor3 = COLOR_BG_SOFT, TextColor3 = COLOR_NEON_BLUE}):Play()
		end
		page.Visible = true
		tween(btn, 0.12, {BackgroundColor3 = COLOR_NEON_PINK, TextColor3 = COLOR_NEON_YELLOW}):Play()
		ActiveTab = name
	end)

	Tabs[name] = {Button = btn, Page = page}
	return page
end

--// HUB CONSTRUCTION
local function buildHub()
	if HubGui then HubGui:Destroy() end

	HubGui = Instance.new("ScreenGui")
	HubGui.Name = "SX_AdminHub"
	HubGui.ResetOnSpawn = false
	HubGui.Parent = PlayerGui

	-- Floating loader button (always visible)
	local loader = Instance.new("TextButton")
	loader.Name = "SX_Loader"
	loader.Size = UDim2.new(0, 160, 0, 42)
	loader.Position = UDim2.new(0.5, 0, 0, 8)
	loader.AnchorPoint = Vector2.new(0.5, 0)
	loader.BackgroundColor3 = COLOR_NEON_PINK
	loader.Text = "SX Admin Hub"
	loader.TextColor3 = COLOR_NEON_YELLOW
	loader.Font = Enum.Font.GothamBold
	loader.TextSize = 16
	loader.AutoButtonColor = false
	loader.Parent = HubGui
	makeCorner(loader, 12)
	makeStroke(loader, COLOR_NEON_BLUE, 2)
	hoverable(loader, COLOR_NEON_PINK, COLOR_NEON_BLUE, COLOR_NEON_YELLOW, Color3.fromRGB(0,0,0))

	-- Main window
	local main = Instance.new("Frame")
	main.Name = "Main"
	main.Size = UDim2.new(0, 760, 0, 520)
	main.Position = UDim2.new(0.5, 0, 0.5, 0)
	main.AnchorPoint = Vector2.new(0.5, 0.5)
	main.BackgroundColor3 = COLOR_BG
	main.Active = true
	main.Visible = false
	main.Parent = HubGui
	makeCorner(main, 12)
	makeStroke(main, COLOR_NEON_BLUE, 2)

	-- Title bar
	local titleBar = Instance.new("Frame", main)
	titleBar.Size = UDim2.new(1, 0, 0, 44)
	titleBar.BackgroundColor3 = COLOR_BG_SOFT
	makeCorner(titleBar, 10)
	makeStroke(titleBar, COLOR_NEON_PINK, 1)

	local title = Instance.new("TextLabel", titleBar)
	title.BackgroundTransparency = 1
	title.Position = UDim2.new(0, 12, 0, 0)
	title.Size = UDim2.new(1, -160, 1, 0)
	title.Font = Enum.Font.GothamBold
	title.TextSize = 18
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.Text = "⚡ SX Cyberpunk Admin Hub"
	title.TextColor3 = COLOR_TEXT

	local closeBtn = Instance.new("TextButton", titleBar)
	closeBtn.Size = UDim2.new(0, 40, 0, 32)
	closeBtn.Position = UDim2.new(1, -48, 0.5, -16)
	closeBtn.Text = "✕"
	closeBtn.Font = Enum.Font.GothamBold
	closeBtn.TextSize = 18
	closeBtn.BackgroundColor3 = COLOR_BG
	closeBtn.TextColor3 = COLOR_NEON_PINK
	closeBtn.AutoButtonColor = false
	makeCorner(closeBtn, 8)
	makeStroke(closeBtn, COLOR_NEON_PINK, 1)
	hoverable(closeBtn, COLOR_BG, COLOR_NEON_PINK, COLOR_NEON_PINK, COLOR_NEON_YELLOW)

	-- Dragging (touch + mouse)
	do
		local dragStart, startPos
		titleBar.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				Dragging = true
				dragStart = input.Position
				startPos = main.Position
			end
		end)
		titleBar.InputChanged:Connect(function(input)
			if Dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
				local delta = input.Position - dragStart
				main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
			end
		end)
		UIS.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				Dragging = false
			end
		end)
	end

	loader.MouseButton1Click:Connect(function()
		main.Visible = not main.Visible
	end)
	closeBtn.MouseButton1Click:Connect(function()
		main.Visible = false
	end)

	-- Layout
	local side = Instance.new("Frame", main)
	side.Size = UDim2.new(0, 180, 1, -56)
	side.Position = UDim2.new(0, 10, 0, 50)
	side.BackgroundColor3 = COLOR_BG_SOFT
	makeCorner(side, 10)
	makeStroke(side, COLOR_NEON_PINK, 1)

	local sideList = Instance.new("UIListLayout", side)
	sideList.Padding = UDim.new(0, 6)

	local content = Instance.new("Frame", main)
	content.Size = UDim2.new(1, -210, 1, -56)
	content.Position = UDim2.new(0, 200, 0, 50)
	content.BackgroundTransparency = 1

	-- TABS
	local tabMovement = createTab("Movement", side, content)
	local tabCombat   = createTab("Combat",   side, content)
	local tabFun      = createTab("Fun",      side, content)
	local tabVisual   = createTab("Visual",   side, content)
	local tabServer   = createTab("Server",   side, content)
	local tabTarget   = createTab("Target",   side, content)
	local tabSettings = createTab("Settings", side, content)

	-- open first tab
	Tabs["Movement"].Button:Activate()
	Tabs["Movement"].Button.MouseButton1Click:Fire()

	-- MOVEMENT SECTIONS
	do
		local sMove = makeSection(tabMovement, "Movement Controls")
		local c = sMove.Container
		local btn

		btn = makeButton(c, "Super Speed (100)")
		btn.MouseButton1Click:Connect(function()
			local H = safeHumanoid()
			H.WalkSpeed = (H.WalkSpeed == 16) and 100 or 16
			announce("WalkSpeed: "..tostring(H.WalkSpeed))
		end)

		btn = makeButton(c, "Super Jump (200)")
		btn.MouseButton1Click:Connect(function()
			local H = safeHumanoid()
			H.JumpPower = (H.JumpPower == 50) and 200 or 50
			announce("JumpPower: "..tostring(H.JumpPower))
		end)

		local tgFly = makeToggle(c, "Fly (Space Up / Ctrl Down)", false)
		tgFly.Changed:Connect(function()
			local enabled = tgFly.Get()
			if enabled then
				if FlyConn then FlyConn:Disconnect() end
				FlyConn = RS.Heartbeat:Connect(function()
					local rp = rootPart()
					if not rp then return end
					local v = Vector3.zero
					if UIS:IsKeyDown(Enum.KeyCode.Space) then v = v + Vector3.new(0, 55, 0) end
					if UIS:IsKeyDown(Enum.KeyCode.LeftControl) or UIS:IsKeyDown(Enum.KeyCode.ButtonL2) then v = v + Vector3.new(0, -55, 0) end
					if UIS:IsKeyDown(Enum.KeyCode.W) or UIS:IsKeyDown(Enum.KeyCode.Thumbstick1) then v = v + (rp.CFrame.LookVector * 55) end
					if UIS:IsKeyDown(Enum.KeyCode.S) then v = v - (rp.CFrame.LookVector * 55) end
					if UIS:IsKeyDown(Enum.KeyCode.A) then v = v - (rp.CFrame.RightVector * 55) end
					if UIS:IsKeyDown(Enum.KeyCode.D) then v = v + (rp.CFrame.RightVector * 55) end
					rp.Velocity = v
				end)
			else
				if FlyConn then FlyConn:Disconnect(); FlyConn = nil end
			end
		end)

		local tgNoclip = makeToggle(c, "Noclip", false)
		tgNoclip.Changed:Connect(function()
			local enabled = tgNoclip.Get()
			if enabled then
				if NoclipConn then NoclipConn:Disconnect() end
				NoclipConn = RS.Stepped:Connect(function()
					if not Character then return end
					for _,p in ipairs(Character:GetDescendants()) do
						if p:IsA("BasePart") then p.CanCollide = false end
					end
				end)
			else
				if NoclipConn then NoclipConn:Disconnect(); NoclipConn = nil end
			end
		end)

		local tgInf = makeToggle(c, "Infinite Jump", false)
		tgInf.Changed:Connect(function()
			local enabled = tgInf.Get()
			if enabled then
				if InfJumpConn then InfJumpConn:Disconnect() end
				InfJumpConn = UIS.JumpRequest:Connect(function()
					local H = safeHumanoid()
					H:ChangeState(Enum.HumanoidStateType.Jumping)
				end)
			else
				if InfJumpConn then InfJumpConn:Disconnect(); InfJumpConn = nil end
			end
		end)

		btn = makeButton(c, "Blink Forward 12")
		btn.MouseButton1Click:Connect(function()
			local rp = rootPart()
			if rp then rp.CFrame = rp.CFrame + rp.CFrame.LookVector * 12 end
		end)

		btn = makeButton(c, "Teleport Up +50")
		btn.MouseButton1Click:Connect(function()
			local rp = rootPart()
			if rp then rp.CFrame = rp.CFrame + Vector3.new(0,50,0) end
		end)

		local sPhysics = makeSection(tabMovement, "Physics Tweaks")
		local pc = sPhysics.Container

		local tgGravity = makeToggle(pc, "Low Gravity (0.5x)", false)
		local lastG = workspace.Gravity
		tgGravity.Changed:Connect(function()
			if tgGravity.Get() then
				lastG = workspace.Gravity
				workspace.Gravity = lastG * 0.5
			else
				workspace.Gravity = lastG
			end
		end)

		local btnReset = makeButton(pc, "Reset Movement")
		btnReset.MouseButton1Click:Connect(function()
			local H = safeHumanoid()
			H.WalkSpeed = 16
			H.JumpPower = 50
			if FlyConn then FlyConn:Disconnect(); FlyConn=nil end
			if NoclipConn then NoclipConn:Disconnect(); NoclipConn=nil end
			if InfJumpConn then InfJumpConn:Disconnect(); InfJumpConn=nil end
			for _,p in ipairs(Character:GetDescendants()) do
				if p:IsA("BasePart") then p.CanCollide = true end
			end
			tgFly.Set(false); tgNoclip.Set(false); tgInf.Set(false); tgGravity.Set(false)
		end)
	end

	-- COMBAT SECTIONS
	do
		local sSelf = makeSection(tabCombat, "Self Combat Tools")
		local c = sSelf.Container

		local btn = makeButton(c, "God Mode (client)")
		btn.MouseButton1Click:Connect(function()
			local H = safeHumanoid()
			H.MaxHealth = math.huge
			H.Health = math.huge
			announce("God mode (client) applied")
		end)

		btn = makeButton(c, "Kill Self")
		btn.MouseButton1Click:Connect(function()
			local H = safeHumanoid()
			H.Health = 0
		end)

		btn = makeButton(c, "Ragdoll (Physics)")
		btn.MouseButton1Click:Connect(function()
			local H = safeHumanoid()
			H:ChangeState(Enum.HumanoidStateType.Physics)
			task.delay(1.2, function() if H then H:ChangeState(Enum.HumanoidStateType.GettingUp) end end)
		end)

		btn = makeButton(c, "Spin 360")
		btn.MouseButton1Click:Connect(function()
			local rp = rootPart()
			if rp then
				rp.CFrame = rp.CFrame * CFrame.Angles(0, math.rad(360), 0)
			end
		end)

		local sTarget = makeSection(tabCombat, "Targeted (Client-Side)")
		local tc = sTarget.Container

		local dd = makeDropdown(tc, "Select Player", function()
			local list = {}
			for _,pl in ipairs(Players:GetPlayers()) do
				if pl ~= LocalPlayer then
					table.insert(list, {text = pl.DisplayName .. " (@"..pl.Name..")", value = pl})
				end
			end
			return list
		end, function(plr)
			CurrentTarget = plr
		end)

		local btnTo = makeButton(tc, "Teleport To Target")
		btnTo.MouseButton1Click:Connect(function()
			if CurrentTarget and CurrentTarget.Character and CurrentTarget.Character.PrimaryPart then
				local rp = rootPart()
				if rp then
					rp.CFrame = CurrentTarget.Character.PrimaryPart.CFrame + Vector3.new(2,0,2)
				end
			else
				announce("Select a target first.")
			end
		end)

		local btnFollow = makeButton(tc, "Follow Target (toggle)")
		local followConn = nil
		btnFollow.MouseButton1Click:Connect(function()
			if followConn then followConn:Disconnect(); followConn=nil; announce("Follow: OFF"); return end
			if not CurrentTarget then announce("Select a target first."); return end
			announce("Follow: ON")
			followConn = RS.Heartbeat:Connect(function()
				if not CurrentTarget or not CurrentTarget.Character or not CurrentTarget.Character.PrimaryPart then return end
				local rp = rootPart(); if not rp then return end
				local pos = CurrentTarget.Character.PrimaryPart.Position + (CurrentTarget.Character.PrimaryPart.CFrame.LookVector * -2)
				rp.CFrame = CFrame.new(pos, CurrentTarget.Character.PrimaryPart.Position)
			end)
		end)

		local btnSpectate = makeButton(tc, "Spectate Target (toggle)")
		local spectate = false
		btnSpectate.MouseButton1Click:Connect(function()
			if not CurrentTarget or not CurrentTarget.Character then announce("Select a target first."); return end
			spectate = not spectate
			if spectate then
				workspace.CurrentCamera.CameraSubject = CurrentTarget.Character:FindFirstChildOfClass("Humanoid") or CurrentTarget.Character
				announce("Spectating @"..CurrentTarget.Name)
			else
				workspace.CurrentCamera.CameraSubject = Humanoid
				announce("Spectate OFF")
			end
		end)

		local btnAnnoy = makeButton(tc, "Annoy Target: Orbit (client)")
		btnAnnoy.MouseButton1Click:Connect(function()
			if not CurrentTarget or not CurrentTarget.Character or not CurrentTarget.Character.PrimaryPart then announce("Select a target first."); return end
			local rp = rootPart(); if not rp then return end
			for i=1,100 do
				if not CurrentTarget.Character or not CurrentTarget.Character.PrimaryPart then break end
				local tpos = CurrentTarget.Character.PrimaryPart.Position
				local angle = math.rad(i*12)
				local offset = Vector3.new(math.cos(angle)*4, 2, math.sin(angle)*4)
				rp.CFrame = CFrame.new(tpos + offset, tpos)
				RS.Heartbeat:Wait()
			end
		end)
	end

	-- FUN
	do
		local sAnim = makeSection(tabFun, "Emotes & Fun")
		local c = sAnim.Container

		local function playAnim(id)
			local H = safeHumanoid()
			local anim = Instance.new("Animation")
			anim.AnimationId = "rbxassetid://"..tostring(id)
			local track = (H:FindFirstChildOfClass("Animator") or Instance.new("Animator", H)):LoadAnimation(anim)
			track:Play()
			task.delay(8, function() pcall(function() track:Stop() end) end)
		end

		local b = makeButton(c, "Dance")
		b.MouseButton1Click:Connect(function() playAnim(507771019) end)
		b = makeButton(c, "Wave")
		b.MouseButton1Click:Connect(function() playAnim(507770239) end)
		b = makeButton(c, "Hero Pose")
		b.MouseButton1Click:Connect(function() playAnim(616161997) end)

		local sMisc = makeSection(tabFun, "Misc")
		local m = sMisc.Container

		local tgSit = makeToggle(m, "Sit / Unsit", false)
		tgSit.Changed:Connect(function()
			local H = safeHumanoid()
			H.Sit = tgSit.Get()
		end)

		local b2 = makeButton(m, "Launch Upward")
		b2.MouseButton1Click:Connect(function()
			local rp = rootPart()
			if rp then rp.Velocity = Vector3.new(0, 200, 0) end
		end)

		local b3 = makeButton(m, "Spin Fast (1 sec)")
		b3.MouseButton1Click:Connect(function()
			local rp = rootPart()
			if not rp then return end
			for i=1,20 do
				rp.CFrame = rp.CFrame * CFrame.Angles(0, math.rad(18), 0)
				task.wait(0.05)
			end
		end)
	end

	-- VISUAL
	do
		local sWorld = makeSection(tabVisual, "World")
		local c = sWorld.Container

		local tgNight = makeToggle(c, "Night Vision", false)
		local prevBrightness, prevAmbient = Lighting.Brightness, Lighting.Ambient
		tgNight.Changed:Connect(function()
			if tgNight.Get() then
				prevBrightness, prevAmbient = Lighting.Brightness, Lighting.Ambient
				Lighting.Brightness = 4
				Lighting.Ambient   = Color3.fromRGB(0, 255, 200)
			else
				Lighting.Brightness = prevBrightness
				Lighting.Ambient   = prevAmbient
			end
		end)

		local tgOutline = makeToggle(c, "Neon Character Material", false)
		tgOutline.Changed:Connect(function()
			if not Character then return end
			for _,p in ipairs(Character:GetDescendants()) do
				if p:IsA("BasePart") then
					p.Material = tgOutline.Get() and Enum.Material.Neon or Enum.Material.SmoothPlastic
				end
			end
		end)

		local sESP = makeSection(tabVisual, "Player ESP (Billboard)")
		local e = sESP.Container

		local tgESP = makeToggle(e, "Toggle ESP (names)", false)
		local function buildESP()
			if ESPFolder then ESPFolder:Destroy() end
			ESPFolder = Instance.new("Folder", HubGui)
			ESPFolder.Name = "SX_ESP"
			for _,pl in ipairs(Players:GetPlayers()) do
				if pl ~= LocalPlayer and pl.Character and pl.Character:FindFirstChild("Head") then
					local bb = Instance.new("BillboardGui", ESPFolder)
					bb.AlwaysOnTop = true
					bb.StudsOffset = Vector3.new(0, 2.5, 0)
					bb.Size = UDim2.new(0, 200, 0, 32)
					bb.Adornee = pl.Character.Head

					local t = Instance.new("TextLabel", bb)
					t.Size = UDim2.new(1,0,1,0)
					t.BackgroundTransparency = 1
					t.Font = Enum.Font.GothamBold
					t.TextSize = 14
					t.Text = pl.DisplayName .. " (@"..pl.Name..")"
					t.TextColor3 = COLOR_NEON_PINK
					makeStroke(t, COLOR_NEON_BLUE, 1)
				end
			end
		end
		tgESP.Changed:Connect(function()
			if tgESP.Get() then buildESP() else if ESPFolder then ESPFolder:Destroy(); ESPFolder=nil end end
		end)
	end

	-- SERVER
	do
		local sServer = makeSection(tabServer, "Server & Session")
		local c = sServer.Container

		local b = makeButton(c, "Rejoin")
		b.MouseButton1Click:Connect(function()
			TeleportService:Teleport(game.PlaceId, LocalPlayer)
		end)

		b = makeButton(c, "Server Hop (soft)")
		b.MouseButton1Click:Connect(function()
			TeleportService:Teleport(game.PlaceId, LocalPlayer)
		end)

		b = makeButton(c, "Copy JobId")
		b.MouseButton1Click:Connect(function()
			if setclipboard then setclipboard(game.JobId) end
			announce("JobId copied (if permitted)")
		end)

		local sClient = makeSection(tabServer, "Client Utils")
		local d = sClient.Container

		local b2 = makeButton(d, "Reset Character")
		b2.MouseButton1Click:Connect(function()
			local H = safeHumanoid()
			H.Health = 0
		end)

		local b3 = makeButton(d, "Clear Connections (Fly/Noclip/InfJump)")
		b3.MouseButton1Click:Connect(function()
			if FlyConn then FlyConn:Disconnect(); FlyConn=nil end
			if NoclipConn then NoclipConn:Disconnect(); NoclipConn=nil end
			if InfJumpConn then InfJumpConn:Disconnect(); InfJumpConn=nil end
			announce("Cleared loop connections.")
		end)
	end

	-- TARGET
	do
		local sSelect = makeSection(tabTarget, "Target Selector")
		local c = sSelect.Container

		local search = makeTextBox(c, "Search Player (@name or display)", "type to filter…")
		local dd = makeDropdown(c, "Choose Player", function()
			local q = string.lower(search.Text)
			local list = {}
			for _,pl in ipairs(Players:GetPlayers()) do
				if pl ~= LocalPlayer then
					local label = pl.DisplayName .. " (@"..pl.Name..")"
					if q == "" or string.find(string.lower(label), q, 1, true) then
						table.insert(list, {text = label, value = pl})
					end
				end
			end
			return list
		end, function(pl) CurrentTarget = pl end)

		search:GetPropertyChangedSignal("Text"):Connect(function()
			dd.Open() -- repopulate
		end)

		local sActs = makeSection(tabTarget, "Target Actions (client)")
		local a = sActs.Container

		local b = makeButton(a, "Teleport To")
		b.MouseButton1Click:Connect(function()
			if not CurrentTarget or not CurrentTarget.Character or not CurrentTarget.Character.PrimaryPart then announce("Pick a target."); return end
			local rp = rootPart(); if not rp then return end
			rp.CFrame = CurrentTarget.Character.PrimaryPart.CFrame + Vector3.new(2,0,2)
		end)

		local b2 = makeButton(a, "Bring To Me (move self near)")
		b2.MouseButton1Click:Connect(function()
			if not CurrentTarget or not CurrentTarget.Character or not CurrentTarget.Character.PrimaryPart then announce("Pick a target."); return end
			local rp = rootPart(); if not rp then return end
			CurrentTarget = CurrentTarget
			rp.CFrame = rp.CFrame + Vector3.new(0,0,0) -- noop to ensure rp
			-- client-safe "bring": we just TP ourselves in front and stare
			rp.CFrame = CFrame.new(rp.Position, CurrentTarget.Character.PrimaryPart.Position)
		end)

		local b3 = makeButton(a, "Fling Self Into Target")
		b3.MouseButton1Click:Connect(function()
			if not CurrentTarget or not CurrentTarget.Character or not CurrentTarget.Character.PrimaryPart then announce("Pick a target."); return end
			local rp = rootPart(); if not rp then return end
			local dir = (CurrentTarget.Character.PrimaryPart.Position - rp.Position).Unit
			rp.Velocity = dir * 200 + Vector3.new(0,50,0)
		end)

		local followConn
		local b4 = makeButton(a, "Follow Target (toggle)")
		b4.MouseButton1Click:Connect(function()
			if followConn then followConn:Disconnect(); followConn=nil; announce("Follow: OFF"); return end
			if not CurrentTarget then announce("Pick a target."); return end
			announce("Follow: ON")
			followConn = RS.Heartbeat:Connect(function()
				if not CurrentTarget or not CurrentTarget.Character or not CurrentTarget.Character.PrimaryPart then return end
				local rp = rootPart(); if not rp then return end
				local pos = CurrentTarget.Character.PrimaryPart.Position + (CurrentTarget.Character.PrimaryPart.CFrame.LookVector * -3)
				rp.CFrame = CFrame.new(pos, CurrentTarget.Character.PrimaryPart.Position)
			end)
		end)
	end

	-- SETTINGS
	do
		local sUI = makeSection(tabSettings, "Interface")
		local c = sUI.Container

		local tgHints = makeToggle(c, "Notifications", true)
		tgHints.Changed:Connect(function()
			if tgHints.Get() then announce("Notifications ON") else announce("Notifications OFF") end
		end)

		local b = makeButton(c, "Unload Hub")
		b.MouseButton1Click:Connect(function()
			clearConnections(Connections)
			if FlyConn then FlyConn:Disconnect() end
			if NoclipConn then NoclipConn:Disconnect() end
			if InfJumpConn then InfJumpConn:Disconnect() end
			if HubGui then HubGui:Destroy() end
		end)

		local sKey = makeSection(tabSettings, "Keybinds")
		local kc = sKey.Container
		local info = Instance.new("TextLabel", kc)
		info.BackgroundTransparency = 1
		info.Size = UDim2.new(1, -20, 0, 40)
		info.Position = UDim2.new(0, 10, 0, 0)
		info.Font = Enum.Font.Gotham
		info.TextSize = 14
		info.TextColor3 = COLOR_TEXT
		info.TextXAlignment = Enum.TextXAlignment.Left
		info.TextWrapped = true
		info.Text = "RightCtrl: Toggle Hub • Esc: Roblox menu\nButton works on mobile."
	end
end

-- Build once
buildHub()

print("[SX Cyberpunk Admin Hub] loaded.")
