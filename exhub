-- ⚡ Auto GamePass Menu (PC + Mobile Friendly)
-- Place in ServerScriptService

local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

-- RemoteEvent for passes
local GamePassEvent = Instance.new("RemoteEvent")
GamePassEvent.Name = "GamePassListEvent"
GamePassEvent.Parent = ReplicatedStorage

-- Universe ID
local universeId = game.GameId

-- Fetch passes
local function fetchGamepasses()
	local url = "https://games.roblox.com/v1/games/"..universeId.."/game-passes?limit=100"
	local ok, res = pcall(function()
		return HttpService:GetAsync(url)
	end)
	if ok then
		local data = HttpService:JSONDecode(res)
		if data and data.data then
			return data.data
		end
	end
	return {}
end

-- Player added
Players.PlayerAdded:Connect(function(player)
	local passes = fetchGamepasses()
	GamePassEvent:FireClient(player, passes)

	local ui = Instance.new("LocalScript")
	ui.Name = "GamePassMenuUI"
	ui.Source = [[
		local Players = game:GetService("Players")
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local MarketplaceService = game:GetService("MarketplaceService")
		local TweenService = game:GetService("TweenService")
		local UIS = game:GetService("UserInputService")

		local player = Players.LocalPlayer
		local event = ReplicatedStorage:WaitForChild("GamePassListEvent")

		-- Colors
		local neonBlue = Color3.fromRGB(0,255,255)
		local neonPink = Color3.fromRGB(255,0,128)
		local darkBG = Color3.fromRGB(15,15,20)

		-- Gui
		local gui = Instance.new("ScreenGui")
		gui.Name = "GamePassMenu"
		gui.ResetOnSpawn = false
		gui.Parent = player:WaitForChild("PlayerGui")

		-- Main frame (scaled for device)
		local frame = Instance.new("Frame")
		frame.Size = UDim2.new(0.7, 0, 0.6, 0) -- % of screen so it fits mobile
		frame.Position = UDim2.new(0.5, 0, 0.5, 0)
		frame.AnchorPoint = Vector2.new(0.5, 0.5)
		frame.BackgroundColor3 = darkBG
		frame.Active = true
		frame.Parent = gui

		Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)
		local stroke = Instance.new("UIStroke", frame)
		stroke.Thickness = 3
		stroke.Color = neonBlue

		-- Title
		local title = Instance.new("TextLabel", frame)
		title.Size = UDim2.new(1, -40, 0, 40)
		title.Position = UDim2.new(0, 10, 0, 0)
		title.BackgroundTransparency = 1
		title.Font = Enum.Font.GothamBold
		title.TextSize = 18
		title.TextColor3 = neonPink
		title.Text = "⚡ GamePasses ⚡"

		-- Minimize button
		local minBtn = Instance.new("TextButton", frame)
		minBtn.Size = UDim2.new(0, 30, 0, 30)
		minBtn.Position = UDim2.new(1, -35, 0, 5)
		minBtn.BackgroundColor3 = darkBG
		minBtn.Text = "-"
		minBtn.Font = Enum.Font.GothamBold
		minBtn.TextSize = 20
		minBtn.TextColor3 = neonBlue
		Instance.new("UICorner", minBtn).CornerRadius = UDim.new(0, 6)

		-- ScrollFrame
		local scroll = Instance.new("ScrollingFrame", frame)
		scroll.Size = UDim2.new(1, -20, 1, -60)
		scroll.Position = UDim2.new(0, 10, 0, 50)
		scroll.CanvasSize = UDim2.new(0,0,0,0)
		scroll.ScrollBarThickness = 6
		scroll.BackgroundTransparency = 1
		local layout = Instance.new("UIListLayout", scroll)
		layout.Padding = UDim.new(0,8)

		-- Build pass button
		local function makeButton(info)
			local btn = Instance.new("TextButton")
			btn.Size = UDim2.new(1, -10, 0, 70)
			btn.BackgroundColor3 = Color3.fromRGB(25,25,35)
			btn.Text = ""
			btn.Parent = scroll
			Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 10)
			local glow = Instance.new("UIStroke", btn)
			glow.Thickness = 2
			glow.Color = neonPink

			local icon = Instance.new("ImageLabel", btn)
			icon.Size = UDim2.new(0,60,0,60)
			icon.Position = UDim2.new(0,5,0.5,-30)
			icon.BackgroundTransparency = 1
			icon.Image = "rbxassetid://"..tostring(info.iconImageAssetId or 0)

			local name = Instance.new("TextLabel", btn)
			name.Size = UDim2.new(1, -80, 0, 30)
			name.Position = UDim2.new(0,75,0,10)
			name.BackgroundTransparency = 1
			name.Font = Enum.Font.GothamBold
			name.Text = info.name or "Unknown"
			name.TextColor3 = neonBlue
			name.TextXAlignment = Enum.TextXAlignment.Left
			name.TextSize = 16

			local price = Instance.new("TextLabel", btn)
			price.Size = UDim2.new(1, -80, 0, 20)
			price.Position = UDim2.new(0,75,0,40)
			price.BackgroundTransparency = 1
			price.Font = Enum.Font.Gotham
			price.Text = tostring(info.price or "?").." R$"
			price.TextColor3 = neonPink
			price.TextXAlignment = Enum.TextXAlignment.Left
			price.TextSize = 14

			btn.MouseButton1Click:Connect(function()
				game:GetService("MarketplaceService"):PromptGamePassPurchase(player, info.id)
			end)
			btn.MouseEnter:Connect(function()
				if not UIS.TouchEnabled then
					TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = neonPink}):Play()
				end
			end)
			btn.MouseLeave:Connect(function()
				if not UIS.TouchEnabled then
					TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(25,25,35)}):Play()
				end
			end)
		end

		-- Minimize
		local minimized = false
		minBtn.MouseButton1Click:Connect(function()
			minimized = not minimized
			if minimized then
				scroll.Visible = false
				frame.Size = UDim2.new(0.3,0,0.1,0)
				minBtn.Text = "+"
			else
				scroll.Visible = true
				frame.Size = UDim2.new(0.7,0,0.6,0)
				minBtn.Text = "-"
			end
		end)

		-- Drag support (works for touch & mouse)
		local dragging, dragStart, startPos
		local function update(input)
			local delta = input.Position - dragStart
			frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
									   startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
		frame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = frame.Position
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)
		UIS.InputChanged:Connect(function(input)
			if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
				update(input)
			end
		end)

		-- Load passes
		event.OnClientEvent:Connect(function(passes)
			for _,p in ipairs(passes) do
				makeButton(p)
			end
			scroll.CanvasSize = UDim2.new(0,0,0,#passes*80)
		end)
	]]
	ui.Parent = player:WaitForChild("PlayerGui")
end)
