-- Test Exploit Panel (for Anti-Cheat Testing)
-- LocalScript inside StarterGui

local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Create main GUI
local gui = Instance.new("ScreenGui")
gui.Name = "TestExploitPanel"
gui.ResetOnSpawn = false
gui.Parent = player.PlayerGui

-- Main draggable frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 300, 0, 420)
frame.Position = UDim2.new(0.5, -150, 0.5, -210)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.Active = true
frame.Draggable = true -- works for both PC + mobile
frame.Parent = gui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = frame

-- Title bar
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
title.Text = "Anti-Cheat Test Panel"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 14
title.Parent = frame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = title

-- Scrollable content
local scrolling = Instance.new("ScrollingFrame")
scrolling.Size = UDim2.new(1, -10, 1, -40)
scrolling.Position = UDim2.new(0, 5, 0, 35)
scrolling.CanvasSize = UDim2.new(0,0,0,600)
scrolling.ScrollBarThickness = 6
scrolling.BackgroundTransparency = 1
scrolling.Parent = frame

-- Helpers
local function makeButton(name, text, posY)
	local btn = Instance.new("TextButton")
	btn.Name = name
	btn.Size = UDim2.new(1, -20, 0, 30)
	btn.Position = UDim2.new(0, 10, 0, posY)
	btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	btn.Text = text
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 14
	btn.Parent = scrolling
	local c = Instance.new("UICorner")
	c.CornerRadius = UDim.new(0, 6)
	c.Parent = btn
	return btn
end

local function makeSlider(name, label, posY, min, max, default)
	local container = Instance.new("Frame")
	container.Name = name.."Container"
	container.Size = UDim2.new(1, -20, 0, 60)
	container.Position = UDim2.new(0, 10, 0, posY)
	container.BackgroundTransparency = 1
	container.Parent = scrolling

	local lbl = Instance.new("TextLabel")
	lbl.Size = UDim2.new(1, 0, 0, 20)
	lbl.BackgroundTransparency = 1
	lbl.Text = label
	lbl.TextColor3 = Color3.fromRGB(255, 255, 255)
	lbl.Font = Enum.Font.Gotham
	lbl.TextSize = 14
	lbl.Parent = container

	local bar = Instance.new("Frame")
	bar.Size = UDim2.new(1, 0, 0, 6)
	bar.Position = UDim2.new(0, 0, 0, 25)
	bar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	bar.Parent = container
	local barCorner = Instance.new("UICorner")
	barCorner.CornerRadius = UDim.new(1,0)
	barCorner.Parent = bar

	local fill = Instance.new("Frame")
	fill.Size = UDim2.new((default-min)/(max-min), 0, 1, 0)
	fill.BackgroundColor3 = Color3.fromRGB(0, 162, 255)
	fill.Parent = bar
	local fillCorner = Instance.new("UICorner")
	fillCorner.CornerRadius = UDim.new(1,0)
	fillCorner.Parent = fill

	local knob = Instance.new("TextButton")
	knob.Size = UDim2.new(0, 20, 0, 20)
	knob.Position = UDim2.new(fill.Size.X.Scale, -10, 0, -7)
	knob.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
	knob.Text = ""
	knob.Parent = bar
	local knobCorner = Instance.new("UICorner")
	knobCorner.CornerRadius = UDim.new(1,0)
	knobCorner.Parent = knob

	local valLbl = Instance.new("TextLabel")
	valLbl.Size = UDim2.new(1, 0, 0, 20)
	valLbl.Position = UDim2.new(0,0,0,40)
	valLbl.BackgroundTransparency = 1
	valLbl.Text = tostring(default)
	valLbl.TextColor3 = Color3.fromRGB(200, 200, 200)
	valLbl.Font = Enum.Font.Gotham
	valLbl.TextSize = 14
	valLbl.Parent = container

	local dragging = false

	local function update(x)
		local percent = math.clamp((x - bar.AbsolutePosition.X) / bar.AbsoluteSize.X, 0, 1)
		fill.Size = UDim2.new(percent,0,1,0)
		knob.Position = UDim2.new(percent,-10,0,-7)
		local val = math.floor(min + (max-min)*percent)
		valLbl.Text = tostring(val)
		return val
	end

	knob.MouseButton1Down:Connect(function()
		dragging = true
	end)

	UIS.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = false
		end
	end)

	UIS.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			local val = update(input.Position.X)
			container.Value = val
		end
	end)

	bar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			local val = update(input.Position.X)
			container.Value = val
		end
	end)

	container.Value = default
	return container
end

-- Features
local speedSlider = makeSlider("SpeedSlider", "WalkSpeed", 10, 16, 100, 16)
local jumpSlider = makeSlider("JumpSlider", "JumpPower", 80, 50, 200, 50)

local flyBtn = makeButton("FlyBtn", "Toggle Fly", 150)
local noclipBtn = makeButton("NoclipBtn", "Toggle Noclip", 190)
local infJumpBtn = makeButton("InfJumpBtn", "Toggle Infinite Jump", 230)
local tpBtn = makeButton("TpBtn", "Teleport Up 50", 270)
local remoteBtn = makeButton("RemoteBtn", "Spam RemoteEvent", 310)

-- Behavior
local flying = false
local noclip = false
local infJump = false

speedSlider:GetPropertyChangedSignal("Value"):Connect(function()
	humanoid.WalkSpeed = speedSlider.Value
end)

jumpSlider:GetPropertyChangedSignal("Value"):Connect(function()
	humanoid.JumpPower = jumpSlider.Value
end)

flyBtn.MouseButton1Click:Connect(function()
	flying = not flying
	if flying then
		flyBtn.BackgroundColor3 = Color3.fromRGB(0,200,100)
		RS.RenderStepped:Connect(function()
			if flying and character and character:FindFirstChild("HumanoidRootPart") then
				local move = Vector3.new()
				if UIS:IsKeyDown(Enum.KeyCode.W) then move = move + Vector3.new(0,0,-1) end
				if UIS:IsKeyDown(Enum.KeyCode.S) then move = move + Vector3.new(0,0,1) end
				if UIS:IsKeyDown(Enum.KeyCode.A) then move = move + Vector3.new(-1,0,0) end
				if UIS:IsKeyDown(Enum.KeyCode.D) then move = move + Vector3.new(1,0,0) end
				if UIS:IsKeyDown(Enum.KeyCode.Space) then move = move + Vector3.new(0,1,0) end
				if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then move = move + Vector3.new(0,-1,0) end
				character:TranslateBy(move * 1.5)
			end
		end)
	else
		flyBtn.BackgroundColor3 = Color3.fromRGB(40,40,40)
	end
end)

noclipBtn.MouseButton1Click:Connect(function()
	noclip = not noclip
	if noclip then
		noclipBtn.BackgroundColor3 = Color3.fromRGB(0,200,100)
	else
		noclipBtn.BackgroundColor3 = Color3.fromRGB(40,40,40)
	end
end)

RS.Stepped:Connect(function()
	if noclip and character then
		for _,v in pairs(character:GetDescendants()) do
			if v:IsA("BasePart") and v.CanCollide then
				v.CanCollide = false
			end
		end
	end
end)

infJumpBtn.MouseButton1Click:Connect(function()
	infJump = not infJump
	if infJump then
		infJumpBtn.BackgroundColor3 = Color3.fromRGB(0,200,100)
	else
		infJumpBtn.BackgroundColor3 = Color3.fromRGB(40,40,40)
	end
end)

UIS.JumpRequest:Connect(function()
	if infJump then
		humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
	end
end)

tpBtn.MouseButton1Click:Connect(function()
	if character and character:FindFirstChild("HumanoidRootPart") then
		character.HumanoidRootPart.CFrame *= CFrame.new(0,50,0)
	end
end)

remoteBtn.MouseButton1Click:Connect(function()
	local remote = ReplicatedStorage:FindFirstChild("ExploitTestEvent")
	if remote and remote:IsA("RemoteEvent") then
		for i=1,20 do
			remote:FireServer("ExploitTest")
		end
	end
end)
