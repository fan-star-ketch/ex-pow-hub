--!strict
-- SX Cyberpunk Panel (Mobile-Friendly, Bugfixed)
-- Put this as a LocalScript in StarterGui (ONLY use in your own place for testing)

------------------------------
-- SERVICES
------------------------------
local Players           = game:GetService("Players")
local UIS               = game:GetService("UserInputService")
local RS                = game:GetService("RunService")
local TweenService      = game:GetService("TweenService")
local Lighting          = game:GetService("Lighting")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StarterGui        = game:GetService("StarterGui")
local HttpService       = game:GetService("HttpService")

------------------------------
-- PLAYER / CHARACTER
------------------------------
local player        = Players.LocalPlayer
local playerGui     = player:WaitForChild("PlayerGui")
local character     = player.Character or player.CharacterAdded:Wait()
local humanoid      = character:FindFirstChildOfClass("Humanoid") or character:WaitForChild("Humanoid")
local rootPart      = character:WaitForChild("HumanoidRootPart")

-- keep references updated on respawn
player.CharacterAdded:Connect(function(char)
	character = char
	humanoid  = char:WaitForChild("Humanoid")
	rootPart  = char:WaitForChild("HumanoidRootPart")
end)

------------------------------
-- SETTINGS
------------------------------
local DEFAULT_SPEED     = 16
local MAX_SPEED         = 200
local DEFAULT_JUMP      = 50
local MAX_JUMP          = 300
local DEFAULT_FOV       = 70
local CYBER_FOV         = 85
local PANEL_WIDTH       = 460
local PANEL_HEIGHT      = 640
local BIG_BUTTON_HEIGHT = 46

------------------------------
-- THEME (Cyberpunk)
------------------------------
local neonBlue   = Color3.fromRGB(0, 255, 255)
local neonPink   = Color3.fromRGB(255, 0, 128)
local neonYellow = Color3.fromRGB(255, 255, 0)
local neonGreen  = Color3.fromRGB(0, 255, 128)
local darkBG     = Color3.fromRGB(12, 12, 16)
local panelBG    = Color3.fromRGB(18, 18, 26)
local barBG      = Color3.fromRGB(8, 8, 12)

------------------------------
-- STATE
------------------------------
local panelGui: ScreenGui? = nil
local panelVisible = false

-- feature states + connections for cleanup
local state = {
	superSpeed      = false,
	superJump       = false,
	infJump         = false,
	noclip          = false,
	flying          = false,
	lowGravity      = false,
	nightVision     = false,
	neonSkin        = false,
	fovBoost        = false,
	cameraShake     = false,

	prevGravity     = workspace.Gravity,
	flyConn         = nil :: RBXScriptConnection?,
	noclipConn      = nil :: RBXScriptConnection?,
	infConn         = nil :: RBXScriptConnection?,
	shakeConn       = nil :: RBXScriptConnection?,
	fpsConn         = nil :: RBXScriptConnection?,
	dragConnMove    = nil :: RBXScriptConnection?,
	dragConnEnd     = nil :: RBXScriptConnection?,
	renderLabelConn = nil :: RBXScriptConnection?,

	animTrack       = nil :: AnimationTrack?,

	waypoints       = {} :: { [string]: CFrame },

	ui              = {}   -- will hold refs to UI elements we need to update
}

------------------------------
-- HELPERS
------------------------------
local function safeHumanoid(): Humanoid?
	if not humanoid or humanoid.Parent == nil then
		if player.Character then
			humanoid = player.Character:FindFirstChildOfClass("Humanoid")
		end
	end
	return humanoid
end

local function safeRoot(): BasePart?
	if not rootPart or rootPart.Parent == nil then
		if player.Character then
			rootPart = player.Character:FindFirstChild("HumanoidRootPart") :: BasePart
		end
	end
	return rootPart
end

local function tween(obj: Instance, props: {[string]: any}, t: number, style: Enum.EasingStyle?, dir: Enum.EasingDirection?)
	local ti = TweenInfo.new(t, style or Enum.EasingStyle.Quad, dir or Enum.EasingDirection.Out)
	local tw = TweenService:Create(obj, ti, props)
	tw:Play()
	return tw
end

local function makeStroke(inst: Instance, color: Color3, thickness: number)
	local s = Instance.new("UIStroke")
	s.Color = color
	s.Thickness = thickness
	s.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	s.Parent = inst
	return s
end

local function makeCorner(inst: Instance, r: number)
	local c = Instance.new("UICorner")
	c.CornerRadius = UDim.new(0, r)
	c.Parent = inst
	return c
end

local function makeGradient(inst: Instance, c1: Color3, c2: Color3)
	local g = Instance.new("UIGradient")
	g.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, c1), ColorSequenceKeypoint.new(1, c2) })
	g.Rotation = 90
	g.Parent = inst
	return g
end

local function sectionHeader(parent: Instance, text: string)
	local h = Instance.new("TextLabel")
	h.BackgroundTransparency = 1
	h.Size = UDim2.new(1, -20, 0, 26)
	h.Position = UDim2.new(0, 10, 0, 0)
	h.Font = Enum.Font.GothamBlack
	h.TextSize = 16
	h.TextColor3 = neonYellow
	h.TextXAlignment = Enum.TextXAlignment.Left
	h.Text = "â€”  " .. text
	h.Parent = parent
	return h
end

local function makeButton(parent: Instance, text: string)
	local b = Instance.new("TextButton")
	b.AutoButtonColor = false
	b.Size = UDim2.new(1, -20, 0, BIG_BUTTON_HEIGHT)
	b.Position = UDim2.new(0, 10, 0, 0)
	b.BackgroundColor3 = panelBG
	b.TextColor3 = neonBlue
	b.Font = Enum.Font.GothamBold
	b.TextSize = 16
	b.Text = text
	makeCorner(b, 10)
	makeStroke(b, neonPink, 2)
	makeGradient(b, Color3.fromRGB(20,20,30), Color3.fromRGB(10,10,16))
	-- hover (PC) + press feedback (works for mobile too)
	b.MouseEnter:Connect(function() tween(b, {BackgroundColor3 = Color3.fromRGB(30, 10, 30)}, 0.15) end)
	b.MouseLeave:Connect(function() tween(b, {BackgroundColor3 = panelBG}, 0.15) end)
	b.MouseButton1Down:Connect(function() tween(b, {TextColor3 = neonYellow}, 0.08) end)
	b.MouseButton1Up:Connect(function() tween(b, {TextColor3 = neonBlue}, 0.08) end)
	b.Parent = parent
	return b
end

local function makeToggle(parent: Instance, labelText: string, initial: boolean, onChanged: (boolean)->())
	local holder = Instance.new("Frame")
	holder.Size = UDim2.new(1, -20, 0, BIG_BUTTON_HEIGHT)
	holder.Position = UDim2.new(0, 10, 0, 0)
	holder.BackgroundColor3 = panelBG
	makeCorner(holder, 10)
	makeStroke(holder, neonBlue, 2)
	holder.Parent = parent

	local lbl = Instance.new("TextLabel")
	lbl.BackgroundTransparency = 1
	lbl.Size = UDim2.new(1, -110, 1, 0)
	lbl.Position = UDim2.new(0, 10, 0, 0)
	lbl.Font = Enum.Font.GothamBold
	lbl.TextSize = 16
	lbl.TextXAlignment = Enum.TextXAlignment.Left
	lbl.TextColor3 = neonBlue
	lbl.Text = labelText
	lbl.Parent = holder

	local t = Instance.new("TextButton")
	t.AutoButtonColor = false
	t.Size = UDim2.new(0, 90, 0, BIG_BUTTON_HEIGHT - 10)
	t.Position = UDim2.new(1, -100, 0, 5)
	t.BackgroundColor3 = initial and neonGreen or Color3.fromRGB(40,40,48)
	t.TextColor3 = Color3.new(0,0,0)
	t.Font = Enum.Font.GothamBold
	t.TextSize = 14
	t.Text = initial and "ON" or "OFF"
	makeCorner(t, 8)
	makeStroke(t, neonPink, 2)
	t.Parent = holder

	local value = initial
	t.MouseButton1Click:Connect(function()
		value = not value
		t.Text = value and "ON" or "OFF"
		tween(t, {BackgroundColor3 = (value and neonGreen or Color3.fromRGB(40,40,48))}, 0.18)
		onChanged(value)
	end)

	return {frame = holder, label = lbl, button = t, get = function() return value end}
end

local function makeSlider(parent: Instance, labelText: string, minV: number, maxV: number, defaultV: number, onChanged: (number)->())
	local cont = Instance.new("Frame")
	cont.Size = UDim2.new(1, -20, 0, 74)
	cont.Position = UDim2.new(0, 10, 0, 0)
	cont.BackgroundTransparency = 1
	cont.Parent = parent

	local lbl = Instance.new("TextLabel")
	lbl.BackgroundTransparency = 1
	lbl.Size = UDim2.new(1, 0, 0, 22)
	lbl.Font = Enum.Font.GothamBold
	lbl.TextSize = 14
	lbl.TextXAlignment = Enum.TextXAlignment.Left
	lbl.TextColor3 = neonYellow
	lbl.Text = labelText .. "  ("..tostring(defaultV)..")"
	lbl.Parent = cont

	local bar = Instance.new("Frame")
	bar.Size = UDim2.new(1, 0, 0, 12)
	bar.Position = UDim2.new(0, 0, 0, 28)
	bar.BackgroundColor3 = barBG
	makeCorner(bar, 6)
	makeStroke(bar, neonPink, 1.5)
	bar.Parent = cont

	local fill = Instance.new("Frame")
	fill.Size = UDim2.new((defaultV-minV)/(maxV-minV), 0, 1, 0)
	fill.BackgroundColor3 = neonPink
	makeCorner(fill, 6)
	fill.Parent = bar

	local knob = Instance.new("ImageButton")
	knob.Size = UDim2.new(0, 24, 0, 24)
	knob.AnchorPoint = Vector2.new(0.5, 0.5)
	knob.Position = UDim2.new(fill.Size.X.Scale, 0, 0.5, 0)
	knob.BackgroundColor3 = neonBlue
	knob.AutoButtonColor = false
	makeCorner(knob, 12)
	makeStroke(knob, neonYellow, 2)
	knob.Parent = bar

	local value = defaultV
	local dragging = false

	local function setFromX(x: number)
		local p = math.clamp((x - bar.AbsolutePosition.X) / math.max(1, bar.AbsoluteSize.X), 0, 1)
		local v = math.floor(minV + (maxV - minV) * p + 0.5)
		value = v
		fill.Size = UDim2.new(p, 0, 1, 0)
		knob.Position = UDim2.new(p, 0, 0.5, 0)
		lbl.Text = labelText .. "  ("..tostring(v)..")"
		onChanged(v)
	end

	local function beginDrag(input: InputObject)
		dragging = true
		setFromX(input.Position.X)
	end

	local function endDrag()
		dragging = false
	end

	bar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			beginDrag(input)
		end
	end)
	knob.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			beginDrag(input)
		end
	end)

	UIS.InputChanged:Connect(function(input)
		if not dragging then return end
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			setFromX(input.Position.X)
		end
	end)
	UIS.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			endDrag()
		end
	end)

	return {
		get = function() return value end,
		set = function(v: number)
			v = math.clamp(v, minV, maxV)
			local p = (v - minV) / (maxV - minV)
			value = v
			fill.Size = UDim2.new(p,0,1,0)
			knob.Position = UDim2.new(p,0,0.5,0)
			lbl.Text = labelText .. "  ("..tostring(v)..")"
			onChanged(v)
		end
	}
end

local function disconnectConn(c: RBXScriptConnection?)
	if c then pcall(function() c:Disconnect() end) end
	return nil
end

------------------------------
-- FEATURE IMPL
------------------------------
local function setWalkspeed(v: number)
	local h = safeHumanoid()
	if h then pcall(function() h.WalkSpeed = math.clamp(v, 0, MAX_SPEED) end) end
end

local function setJumpPower(v: number)
	local h = safeHumanoid()
	if h then pcall(function() h.JumpPower = math.clamp(v, 0, MAX_JUMP) end) end
end

local function startFly()
	if state.flying then return end
	state.flying = true
	local speed = 60
	state.flyConn = RS.RenderStepped:Connect(function(dt)
		local r = safeRoot()
		local h = safeHumanoid()
		if not r or not h then return end
		local dir = Vector3.new()
		if UIS:IsKeyDown(Enum.KeyCode.W) then dir += Vector3.new(0,0,-1) end
		if UIS:IsKeyDown(Enum.KeyCode.S) then dir += Vector3.new(0,0,1) end
		if UIS:IsKeyDown(Enum.KeyCode.A) then dir += Vector3.new(-1,0,0) end
		if UIS:IsKeyDown(Enum.KeyCode.D) then dir += Vector3.new(1,0,0) end
		if UIS:IsKeyDown(Enum.KeyCode.Space) then dir += Vector3.new(0,1,0) end
		if UIS:IsKeyDown(Enum.KeyCode.LeftControl) or UIS:IsKeyDown(Enum.KeyCode.LeftShift) then dir += Vector3.new(0,-1,0) end

		-- mobile thumbstick support
		if h then dir += h.MoveDirection end
		if dir.Magnitude > 0 then
			dir = dir.Unit
		end
		local move = dir * speed * dt
		pcall(function() character:TranslateBy(move) end)
	end)
end

local function stopFly()
	state.flying = false
	state.flyConn = disconnectConn(state.flyConn)
end

local function startNoclip()
	if state.noclip then return end
	state.noclip = true
	state.noclipConn = RS.Stepped:Connect(function()
		if not character then return end
		for _, part in ipairs(character:GetDescendants()) do
			if part:IsA("BasePart") then
				if part.Name ~= "HumanoidRootPart" then
					pcall(function() part.CanCollide = false end)
				end
			end
		end
	end)
end

local function stopNoclip()
	state.noclip = false
	state.noclipConn = disconnectConn(state.noclipConn)
	-- attempt restore
	if character then
		for _, part in ipairs(character:GetDescendants()) do
			if part:IsA("BasePart") then
				pcall(function() part.CanCollide = true end)
			end
		end
	end
end

local function enableInfJump()
	if state.infJump then return end
	state.infJump = true
	state.infConn = UIS.JumpRequest:Connect(function()
		local h = safeHumanoid()
		if state.infJump and h then
			pcall(function() h:ChangeState(Enum.HumanoidStateType.Jumping) end)
		end
	end)
end

local function disableInfJump()
	state.infJump = false
	state.infConn = disconnectConn(state.infConn)
end

local function teleportUp(dy: number)
	local r = safeRoot()
	if r then
		pcall(function()
			r.CFrame = r.CFrame + Vector3.new(0, dy, 0)
		end)
	end
end

local function blinkForward(d: number)
	local r = safeRoot()
	if r then
		pcall(function()
			local forward = r.CFrame.LookVector * d
			r.CFrame = r.CFrame + forward
		end)
	end
end

local function nearestPlayer()
	local r = safeRoot()
	if not r then return nil end
	local best, bestDist
	bestDist = math.huge
	for _, pl in ipairs(Players:GetPlayers()) do
		if pl ~= player and pl.Character and pl.Character.PrimaryPart then
			local dist = (pl.Character.PrimaryPart.Position - r.Position).Magnitude
			if dist < bestDist then
				bestDist = dist
				best = pl
			end
		end
	end
	return best
end

local function teleportToPlayer(plr: Player)
	local r = safeRoot()
	if r and plr and plr.Character and plr.Character.PrimaryPart then
		pcall(function()
			r.CFrame = plr.Character.PrimaryPart.CFrame + Vector3.new(1.5, 0, 0)
		end)
	end
end

local function toggleNightVision(on: boolean)
	if on then
		Lighting.Brightness = 4
		Lighting.Ambient = Color3.fromRGB(0, 255, 200)
		Lighting.ColorShift_Top = Color3.fromRGB(0, 120, 120)
		Lighting.OutdoorAmbient = Color3.fromRGB(0, 60, 60)
	else
		Lighting.Brightness = 2
		Lighting.Ambient = Color3.fromRGB(127,127,127)
		Lighting.ColorShift_Top = Color3.new()
		Lighting.OutdoorAmbient = Color3.new()
	end
end

local function toggleNeonSkin(on: boolean)
	if not character then return end
	for _, p in ipairs(character:GetDescendants()) do
		if p:IsA("BasePart") then
			pcall(function()
				if on then
					p.Material = Enum.Material.Neon
					p.Color = Color3.fromRGB(255, 20, 150)
				else
					p.Material = Enum.Material.SmoothPlastic
					p.Color = Color3.fromRGB(255, 255, 255)
				end
			end)
		end
	end
end

local function toggleFovBoost(on: boolean)
	local camera = workspace.CurrentCamera
	if camera then
		camera.FieldOfView = on and CYBER_FOV or DEFAULT_FOV
	end
end

local function toggleCameraShake(on: boolean)
	state.cameraShake = on
	state.shakeConn = disconnectConn(state.shakeConn)
	if on then
		local camera = workspace.CurrentCamera
		if not camera then return end
		local seed = 0
		state.shakeConn = RS.RenderStepped:Connect(function(dt)
			seed += dt * 8
			local off = Vector3.new(math.sin(seed)*0.2, math.cos(seed*1.2)*0.2, 0)
			camera.CFrame = CFrame.new(camera.CFrame.Position + off) * CFrame.Angles(0, 0, 0)
		end)
	end
end

local function playDance()
	local h = safeHumanoid()
	if not h then return end
	local animator: Animator? = h:FindFirstChildOfClass("Animator")
	if not animator then
		animator = Instance.new("Animator")
		animator.Parent = h
	end
	-- Roblox default dance animation id example
	local anim = Instance.new("Animation")
	anim.AnimationId = "rbxassetid://507771019" -- Dance1
	pcall(function()
		if state.animTrack then state.animTrack:Stop() end
		state.animTrack = animator:LoadAnimation(anim)
		state.animTrack:Play(0.1, 1, 1)
	end)
end

local function stopDance()
	if state.animTrack then
		pcall(function() state.animTrack:Stop() end)
	end
	state.animTrack = nil
end

local function addWaypoint()
	local r = safeRoot()
	if not r then return end
	local name = "WP-" .. string.sub(HttpService:GenerateGUID(false), 1, 6)
	state.waypoints[name] = r.CFrame
	StarterGui:SetCore("SendNotification", {Title="Waypoint Added", Text=name, Duration=2})
	if state.ui and state.ui.waypointList then
		local l = Instance.new("TextLabel")
		l.BackgroundTransparency = 1
		l.Size = UDim2.new(1, -10, 0, 22)
		l.TextXAlignment = Enum.TextXAlignment.Left
		l.Font = Enum.Font.GothamSemibold
		l.TextSize = 14
		l.TextColor3 = neonYellow
		l.Text = "â€¢ " .. name
		l.Parent = state.ui.waypointList
	end
end

local function teleportToWaypoint(name: string)
	local cf = state.waypoints[name]
	local r  = safeRoot()
	if cf and r then
		pcall(function() r.CFrame = cf end)
	end
end

local function clearWaypoints()
	state.waypoints = {}
	if state.ui and state.ui.waypointList then
		for _, child in ipairs(state.ui.waypointList:GetChildren()) do
			if child:IsA("TextLabel") then child:Destroy() end
		end
	end
end

local function spamRemote()
	local remote = ReplicatedStorage:FindFirstChild("ExploitTestEvent")
	if remote and remote:IsA("RemoteEvent") then
		for i = 1, 20 do
			pcall(function() remote:FireServer("TestPayload", i) end)
		end
	else
		warn("ExploitTestEvent not found in ReplicatedStorage (skipping).")
	end
end

local function bigBurst()
	local remote = ReplicatedStorage:FindFirstChild("ExploitTestEvent")
	if remote and remote:IsA("RemoteEvent") then
		for i = 1, 50 do
			pcall(function() remote:FireServer("Burst", i) end)
		end
	else
		warn("ExploitTestEvent not found in ReplicatedStorage (skipping).")
	end
end

local function resetAll()
	disableInfJump()
	stopNoclip()
	stopFly()
	stopDance()
	toggleNightVision(false)
	toggleNeonSkin(false)
	toggleFovBoost(false)
	toggleCameraShake(false)

	local h = safeHumanoid()
	if h then
		pcall(function()
			h.WalkSpeed = DEFAULT_SPEED
			h.JumpPower = DEFAULT_JUMP
			h.Sit = false
		end)
	end
	workspace.Gravity = state.prevGravity or 196.2

	-- UI sync (best-effort)
	if state.ui then
		if state.ui.tgSpeed then state.ui.tgSpeed.button.Text = "OFF" state.ui.tgSpeed.button.BackgroundColor3 = Color3.fromRGB(40,40,48) end
		if state.ui.tgJump  then state.ui.tgJump.button.Text  = "OFF" state.ui.tgJump.button.BackgroundColor3  = Color3.fromRGB(40,40,48) end
		if state.ui.tgInf   then state.ui.tgInf.button.Text   = "OFF" state.ui.tgInf.button.BackgroundColor3   = Color3.fromRGB(40,40,48) end
		if state.ui.tgNc    then state.ui.tgNc.button.Text    = "OFF" state.ui.tgNc.button.BackgroundColor3    = Color3.fromRGB(40,40,48) end
		if state.ui.tgFly   then state.ui.tgFly.button.Text   = "OFF" state.ui.tgFly.button.BackgroundColor3   = Color3.fromRGB(40,40,48) end
		if state.ui.tgGrav  then state.ui.tgGrav.button.Text  = "OFF" state.ui.tgGrav.button.BackgroundColor3  = Color3.fromRGB(40,40,48) end
		if state.ui.tgNV    then state.ui.tgNV.button.Text    = "OFF" state.ui.tgNV.button.BackgroundColor3    = Color3.fromRGB(40,40,48) end
		if state.ui.tgNeon  then state.ui.tgNeon.button.Text  = "OFF" state.ui.tgNeon.button.BackgroundColor3  = Color3.fromRGB(40,40,48) end
		if state.ui.tgFov   then state.ui.tgFov.button.Text   = "OFF" state.ui.tgFov.button.BackgroundColor3   = Color3.fromRGB(40,40,48) end
		if state.ui.tgShake then state.ui.tgShake.button.Text = "OFF" state.ui.tgShake.button.BackgroundColor3 = Color3.fromRGB(40,40,48) end

		if state.ui.wsSlider then state.ui.wsSlider.set(DEFAULT_SPEED) end
		if state.ui.jpSlider then state.ui.jpSlider.set(DEFAULT_JUMP) end
	end
end

------------------------------
-- UI BUILD
------------------------------
local function buildPanel()
	if panelGui then panelGui:Destroy() end

	panelGui = Instance.new("ScreenGui")
	panelGui.Name = "SX_CyberpunkPanel"
	panelGui.ResetOnSpawn = false
	panelGui.IgnoreGuiInset = true
	panelGui.Parent = playerGui

	-- Backdrop glass
	local glass = Instance.new("Frame")
	glass.Size = UDim2.new(1, 0, 1, 0)
	glass.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	glass.BackgroundTransparency = 0.35
	glass.Visible = true
	glass.Parent = panelGui

	-- Main panel
	local frame = Instance.new("Frame")
	frame.Name = "Main"
	frame.Size = UDim2.new(0, PANEL_WIDTH, 0, PANEL_HEIGHT)
	frame.Position = UDim2.new(0.5, 0, 0.5, 0)
	frame.AnchorPoint = Vector2.new(0.5, 0.5)
	frame.BackgroundColor3 = panelBG
	makeCorner(frame, 14)
	makeStroke(frame, neonBlue, 3)
	makeGradient(frame, Color3.fromRGB(20,20,28), Color3.fromRGB(12,12,18))
	frame.Parent = panelGui

	-- title bar (custom draggable for mobile+pc)
	local titleBar = Instance.new("Frame")
	titleBar.Size = UDim2.new(1, 0, 0, 48)
	titleBar.BackgroundColor3 = darkBG
	makeCorner(titleBar, 14)
	makeStroke(titleBar, neonPink, 2)
	titleBar.Parent = frame

	local titleText = Instance.new("TextLabel")
	titleText.BackgroundTransparency = 1
	titleText.Size = UDim2.new(1, -140, 1, 0)
	titleText.Position = UDim2.new(0, 12, 0, 0)
	titleText.Font = Enum.Font.GothamBlack
	titleText.TextSize = 18
	titleText.TextColor3 = neonPink
	titleText.TextXAlignment = Enum.TextXAlignment.Left
	titleText.Text = "âš¡ SX Cyberpunk Panel â€” MOBILE"
	titleText.Parent = titleBar

	-- hide / close buttons
	local closeBtn = Instance.new("TextButton")
	closeBtn.Size = UDim2.new(0, 80, 0, 36)
	closeBtn.Position = UDim2.new(1, -88, 0.5, -18)
	closeBtn.AutoButtonColor = false
	closeBtn.BackgroundColor3 = Color3.fromRGB(40,40,48)
	closeBtn.TextColor3 = neonYellow
	closeBtn.Font = Enum.Font.GothamBold
	closeBtn.TextSize = 14
	closeBtn.Text = "CLOSE"
	makeCorner(closeBtn, 10)
	makeStroke(closeBtn, neonBlue, 2)
	closeBtn.Parent = titleBar

	local toggleBtn = Instance.new("TextButton")
	toggleBtn.Size = UDim2.new(0, 44, 0, 36)
	toggleBtn.Position = UDim2.new(1, -140, 0.5, -18)
	toggleBtn.AutoButtonColor = false
	toggleBtn.BackgroundColor3 = neonBlue
	toggleBtn.TextColor3 = Color3.fromRGB(0,0,0)
	toggleBtn.Font = Enum.Font.GothamBlack
	toggleBtn.TextSize = 18
	toggleBtn.Text = "â‰¡"
	makeCorner(toggleBtn, 10)
	makeStroke(toggleBtn, neonPink, 2)
	toggleBtn.Parent = titleBar

	-- content area (scrolling)
	local scroller = Instance.new("ScrollingFrame")
	scroller.Size = UDim2.new(1, -12, 1, -60)
	scroller.Position = UDim2.new(0, 6, 0, 54)
	scroller.CanvasSize = UDim2.new(0, 0, 0, 0)
	scroller.AutomaticCanvasSize = Enum.AutomaticSize.Y
	scroller.ScrollBarThickness = 8
	scroller.BackgroundTransparency = 1
	scroller.Parent = frame

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 8)
	layout.Parent = scroller

	-- FPS label (optional)
	local statusBar = Instance.new("TextLabel")
	statusBar.BackgroundTransparency = 1
	statusBar.Size = UDim2.new(1, -20, 0, 20)
	statusBar.Position = UDim2.new(0, 10, 1, -22)
	statusBar.Font = Enum.Font.GothamSemibold
	statusBar.TextSize = 13
	statusBar.TextXAlignment = Enum.TextXAlignment.Right
	statusBar.TextColor3 = neonYellow
	statusBar.Text = "Ready."
	statusBar.Parent = frame

	-- make draggable (mobile friendly)
	do
		local dragging = false
		local dragStart = Vector2.new()
		local startPos = frame.Position

		local function inputBegan(input: InputObject)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = frame.Position
				if state.dragConnEnd then state.dragConnEnd:Disconnect() end
				state.dragConnEnd = input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
						state.dragConnEnd = disconnectConn(state.dragConnEnd)
					end
				end)
			end
		end

		local function inputChanged(input: InputObject)
			if not dragging then return end
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				local delta = input.Position - dragStart
				frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
			end
		end

		titleBar.InputBegan:Connect(inputBegan)
		titleBar.InputChanged:Connect(inputChanged)
	end

	--------------------------
	-- BUILD SECTIONS
	--------------------------
	sectionHeader(scroller, "Movement (Live)")
	state.ui.wsSlider = makeSlider(scroller, "WalkSpeed", 0, MAX_SPEED, DEFAULT_SPEED, function(v)
		setWalkspeed(v)
	end)
	state.ui.jpSlider = makeSlider(scroller, "JumpPower", 0, MAX_JUMP, DEFAULT_JUMP, function(v)
		setJumpPower(v)
	end)

	state.ui.tgSpeed = makeToggle(scroller, "Super Speed (100)", false, function(on)
		state.superSpeed = on
		if on then setWalkspeed(100) else setWalkspeed(DEFAULT_SPEED) end
	end)
	state.ui.tgJump  = makeToggle(scroller, "Super Jump (200)", false, function(on)
		state.superJump = on
		if on then setJumpPower(200) else setJumpPower(DEFAULT_JUMP) end
	end)
	state.ui.tgInf   = makeToggle(scroller, "Infinite Jump", false, function(on)
		if on then enableInfJump() else disableInfJump() end
	end)
	state.ui.tgNc    = makeToggle(scroller, "Noclip", false, function(on)
		if on then startNoclip() else stopNoclip() end
	end)
	state.ui.tgFly   = makeToggle(scroller, "Fly (WASD/Thumbstick + Space/Ctrl)", false, function(on)
		if on then startFly() else stopFly() end
	end)

	sectionHeader(scroller, "Teleport & Position")
	makeButton(scroller, "Teleport Up +50").MouseButton1Click:Connect(function() teleportUp(50) end)
	makeButton(scroller, "Blink Forward +10").MouseButton1Click:Connect(function() blinkForward(10) end)
	makeButton(scroller, "Teleport to Nearest Player").MouseButton1Click:Connect(function()
		local t = nearestPlayer()
		if t then teleportToPlayer(t) end
	end)
	makeButton(scroller, "Teleport to Random Player").MouseButton1Click:Connect(function()
		local list = Players:GetPlayers()
		local pool = {}
		for _, pl in ipairs(list) do if pl ~= player then table.insert(pool, pl) end end
		if #pool > 0 then
			teleportToPlayer(pool[math.random(1, #pool)])
		end
	end)

	sectionHeader(scroller, "Waypoints")
	do
		local row = Instance.new("Frame")
		row.Size = UDim2.new(1, -20, 0, BIG_BUTTON_HEIGHT)
		row.Position = UDim2.new(0, 10, 0, 0)
		row.BackgroundTransparency = 1
		row.Parent = scroller

		local addBtn = makeButton(row, "Add Waypoint")
		addBtn.Size = UDim2.new(0.33, -14, 1, 0)
		addBtn.Position = UDim2.new(0, 0, 0, 0)

		local tpBtn = makeButton(row, "Teleport To (last)")
		tpBtn.Size = UDim2.new(0.33, -14, 1, 0)
		tpBtn.Position = UDim2.new(0.34, 7, 0, 0)

		local clrBtn = makeButton(row, "Clear All")
		clrBtn.Size = UDim2.new(0.33, -14, 1, 0)
		clrBtn.Position = UDim2.new(0.67, 14, 0, 0)

		local listHolder = Instance.new("Frame")
		listHolder.Size = UDim2.new(1, -20, 0, 110)
		listHolder.Position = UDim2.new(0, 10, 0, 8)
		listHolder.BackgroundColor3 = Color3.fromRGB(8,8,12)
		makeCorner(listHolder, 10); makeStroke(listHolder, neonBlue, 2)
		listHolder.Parent = scroller

		local listScroll = Instance.new("ScrollingFrame")
		listScroll.Size = UDim2.new(1, -8, 1, -8)
		listScroll.Position = UDim2.new(0, 4, 0, 4)
		listScroll.CanvasSize = UDim2.new(0,0,0,0)
		listScroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
		listScroll.BackgroundTransparency = 1
		listScroll.ScrollBarThickness = 6
		listScroll.Parent = listHolder

		local lLayout = Instance.new("UIListLayout")
		lLayout.Padding = UDim.new(0, 4)
		lLayout.Parent = listScroll

		state.ui.waypointList = listScroll

		addBtn.MouseButton1Click:Connect(function()
			addWaypoint()
		end)
		tpBtn.MouseButton1Click:Connect(function()
			-- teleport to last added
			local last
			for k, _ in pairs(state.waypoints) do last = k end
			if last then teleportToWaypoint(last) end
		end)
		clrBtn.MouseButton1Click:Connect(function()
			clearWaypoints()
		end)
	end

	sectionHeader(scroller, "World / Visual FX")
	state.ui.tgGrav = makeToggle(scroller, "Low Gravity (0.5x)", false, function(on)
		if on then
			state.prevGravity = workspace.Gravity
			workspace.Gravity = (state.prevGravity or 196.2) * 0.5
		else
			workspace.Gravity = state.prevGravity or 196.2
		end
	end)
	state.ui.tgNV = makeToggle(scroller, "Night Vision", false, function(on)
		state.nightVision = on
		toggleNightVision(on)
	end)
	state.ui.tgNeon = makeToggle(scroller, "Neon Character Skin", false, function(on)
		state.neonSkin = on
		toggleNeonSkin(on)
	end)
	state.ui.tgFov = makeToggle(scroller, "FOV Boost", false, function(on)
		state.fovBoost = on
		toggleFovBoost(on)
	end)
	state.ui.tgShake = makeToggle(scroller, "Camera Shake", false, function(on)
		toggleCameraShake(on)
	end)

	sectionHeader(scroller, "Health / Debug")
	makeButton(scroller, "Heal to Full").MouseButton1Click:Connect(function()
		local h = safeHumanoid()
		if h then pcall(function() h.Health = h.MaxHealth end) end
	end)
	makeButton(scroller, "Sit / Unsit").MouseButton1Click:Connect(function()
		local h = safeHumanoid()
		if h then pcall(function() h.Sit = not h.Sit end) end
	end)
	makeButton(scroller, "Print Local State").MouseButton1Click:Connect(function()
		print("-- SX STATE --")
		for k,v in pairs(state) do
			if typeof(v) ~= "Instance" and typeof(v) ~= "function" and typeof(v) ~= "table" then
				print(k, v)
			end
		end
	end)

	sectionHeader(scroller, "Remotes (Test in your own place)")
	makeButton(scroller, "Spam RemoteEvent (20)").MouseButton1Click:Connect(spamRemote)
	makeButton(scroller, "Burst RemoteEvent (50)").MouseButton1Click:Connect(bigBurst)

	sectionHeader(scroller, "Fun")
	makeButton(scroller, "Dance!").MouseButton1Click:Connect(playDance)
	makeButton(scroller, "Stop Dance").MouseButton1Click:Connect(stopDance)
	makeButton(scroller, "Launch Upward").MouseButton1Click:Connect(function()
		local r = safeRoot()
		if r then pcall(function() r.AssemblyLinearVelocity = Vector3.new(0, 120, 0) end) end
	end)
	makeButton(scroller, "Spin 90Â°").MouseButton1Click:Connect(function()
		local r = safeRoot()
		if r then pcall(function() r.CFrame = r.CFrame * CFrame.Angles(0, math.rad(90), 0) end) end
	end)

	sectionHeader(scroller, "Presets / Reset")
	makeButton(scroller, "Preset: Speed 100 / Jump 100").MouseButton1Click:Connect(function()
		setWalkspeed(100); setJumpPower(100)
		if state.ui.wsSlider then state.ui.wsSlider.set(100) end
		if state.ui.jpSlider then state.ui.jpSlider.set(100) end
	end)
	makeButton(scroller, "Preset: Moon â€” Speed 50 / Jump 200").MouseButton1Click:Connect(function()
		setWalkspeed(50); setJumpPower(200)
		if state.ui.wsSlider then state.ui.wsSlider.set(50) end
		if state.ui.jpSlider then state.ui.jpSlider.set(200) end
	end)
	makeButton(scroller, "Reset ALL Client Changes").MouseButton1Click:Connect(resetAll)

	-- status / fps
	do
		local last = tick()
		local frames = 0
		state.fpsConn = RS.RenderStepped:Connect(function()
			frames += 1
			local now = tick()
			if now - last >= 1 then
				local fps = frames / (now - last)
				frames = 0
				last = now
				statusBar.Text = string.format("FPS: %d | WS: %d | JP: %d", math.floor(fps+.5), math.floor((humanoid and humanoid.WalkSpeed or 0)), math.floor((humanoid and humanoid.JumpPower or 0)))
			end
		end)
	end

	-- close & toggle
	closeBtn.MouseButton1Click:Connect(function()
		frame.Visible = false
	end)
	toggleBtn.MouseButton1Click:Connect(function()
		frame.Visible = not frame.Visible
	end)

	-- store ui refs
	state.ui.frame = frame
	state.ui.statusBar = statusBar
end

------------------------------
-- LOADER BUTTON (floating, mobile friendly)
------------------------------
local loaderGui = Instance.new("ScreenGui")
loaderGui.Name = "SX_Loader"
loaderGui.ResetOnSpawn = false
loaderGui.IgnoreGuiInset = true
loaderGui.Parent = playerGui

local loaderBtn = Instance.new("TextButton")
loaderBtn.Size = UDim2.new(0, 220, 0, 54)
loaderBtn.Position = UDim2.new(0.5, 0, 0.12, 0)
loaderBtn.AnchorPoint = Vector2.new(0.5, 0)
loaderBtn.AutoButtonColor = false
loaderBtn.BackgroundColor3 = neonBlue
loaderBtn.TextColor3 = neonPink
loaderBtn.Font = Enum.Font.GothamBlack
loaderBtn.TextSize = 18
loaderBtn.Text = "Load SX Panel"
makeCorner(loaderBtn, 12)
makeStroke(loaderBtn, neonPink, 3)
makeGradient(loaderBtn, Color3.fromRGB(8,50,60), Color3.fromRGB(0,30,40))
loaderBtn.Parent = loaderGui

-- Hover/press effects (PC + mobile)
loaderBtn.MouseEnter:Connect(function()
	tween(loaderBtn, {BackgroundColor3 = Color3.fromRGB(0, 200, 255)}, 0.15)
end)
loaderBtn.MouseLeave:Connect(function()
	tween(loaderBtn, {BackgroundColor3 = neonBlue}, 0.15)
end)
loaderBtn.MouseButton1Down:Connect(function()
	tween(loaderBtn, {TextColor3 = neonYellow}, 0.08)
end)
loaderBtn.MouseButton1Up:Connect(function()
	tween(loaderBtn, {TextColor3 = neonPink}, 0.08)
end)

-- Toggle create/destroy panel
loaderBtn.MouseButton1Click:Connect(function()
	panelVisible = not panelVisible
	if panelVisible then
		buildPanel()
		loaderBtn.Text = "Unload SX Panel"
	else
		-- cleanup
		resetAll()
		if panelGui then panelGui:Destroy() panelGui = nil end
		state.fpsConn = disconnectConn(state.fpsConn)
		loaderBtn.Text = "Load SX Panel"
	end
end)

print("[SX Cyberpunk Panel] Loaded. Mobile-friendly, bugfixed.")
